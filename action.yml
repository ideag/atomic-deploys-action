name: 'Hello World'
description: 'Greet someone'
inputs:
  host:  # id of input
    description: 'SSH server hostname'
    required: true
  username:  # id of input
    description: 'SSH server username'
    required: true
  key:  # id of input
    description: 'SSH server passkey'
    required: true
  port:
    description: 'SSH server port'
    default: 22
  dir:
    description: 'Target directory'
    required: true
outputs:
  stdout:
    description: 'Standard output of the executed commands.'
    value: ${{ steps.entrypoint.outputs.stdout }}
runs:
  using: "composite"
  steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: backup old version
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        port: ${{ inputs.port }}
        script: |
          mkdir -p ${{ inputs.dir }}
          rm -rd ${{ inputs.dir }}/old
          cp -r ${{ inputs.dir }}/current ${{ inputs.dir }}/old
    - name: copy file to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        port: ${{ inputs.port }}
        source: "**,!.git,!.github"
        target: ${{ inputs.dir }}/new
    - name: rotate version
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        port: ${{ inputs.port }}
        script: |
          echo ${{ github.run_number }} > ${{ inputs.dir }}/new/version.txt
          rm -rd ${{ inputs.dir }}/current
          cp -r ${{ inputs.dir }}/new ${{ inputs.dir }}/current
    - name: remove new
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        port: ${{ inputs.port }}
        script: |
          rm -rd ${{ inputs.dir }}/new
    - name: Use data
      id: symlinks
      shell: bash
      run: |
        declare -A arr
        while IFS="@" read -r key value
        do
            arr[$key]="$value"
        done < <(yq e '.links[] | (.source + "@" + .target)' config.yml)
        
        declare -A symlinks
        for key in "${!arr[@]}"
        do
            source="${{ inputs.dir }}/$key"
            target="${{ inputs.dir }}/../${arr[$key]}"
            # echo ([[ -d $target ]])
            # [[ -d $target ]] || ln -s $source $target
            echo "source: $source"
            echo "target: $target"
            symlinks[$source]=$target
        done

        data='{}'

        for i in "${!symlinks[@]}"
        do
            data=$(jq -n --arg data "$data" \
                         --arg key "$i"     \
                         --arg value "${symlinks[$i]}" \
                         '$data | fromjson + { ($key) : ($value) }')
        done
        echo $data
        echo "symlinks=`$data`" >> $GITHUB_OUTPUT      
      # echo $( jq -c -n '$ARGS.positional' --args "${symlinks[@]} )
    - name: setup symlinks
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        port: ${{ inputs.port }}
        script: |
          symlinks=${{ fromJSON( steps.symlinks.outputs.symlinks ) }}
          for key in "${!symlinks[@]}"
          do
            echo "key  : $key"
            echo "value: ${symlinks[$key]}"
          done
        # rm -rd ${{ inputs.dir }}/new
        # typeset -A items
        # while IFS== read -r key value; do
        #   [ -n "$key" ] && items["$key"]="$value"
        # done < <(echo '${{ steps.yaml-action.outputs.data }}' | jq -r '.links | to_entries | .[] | .source + "=" + .target ')
        # typeset -p items
        # printf "%s\n" "${items[@]}"
    #    echo '${{ steps.yaml-action.outputs.data }}' | jq '.links[] | .source, .target' | xargs -n2 echo $1 | ( read source target; echo "Source:$source Target:$target" )
    #    echo "{\"links\":[{\"a\":\"b\",\"c\":\"d\"},{\"e\":\"b\",\"f\":\"d\"}]}" | jq '.links[] | @sh'
    #   echo "${{ steps.yaml-action.outputs.data }}" | jq '.links[]'
    # - name: read config
    #   uses: pietrobolcato/action-read-yaml@1.1.0
    #   id: read_config
    #   with:
    #     config: ${{ github.workspace }}/config.yml
    # - name: use config
    #   shell: bash
    #   run: |
    #     foreach item ( ${{ steps.read_config.outputs['links.array']}} ) 
    #       echo $item.source
    #     end
    # echo ${{ steps.read_config.outputs['links.0.source']}} ${{ steps.read_config.outputs['links.0.target']}}
    # - name: use config
    #   uses: appleboy/ssh-action@v1.2.0
    #   with:
    #     host: ${{ inputs.host }}
    #     username: ${{ inputs.username }}
    #     key: ${{ inputs.key }}
    #     port: ${{ inputs.port }}
    #     script: |
    #       echo ${{ steps.read_config.links[0].source}} ${{ steps.read_config.links[0].target}}
